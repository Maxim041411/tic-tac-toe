{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DOM\\\\Desktop\\\\my-app 123\\\\src\\\\components\\\\Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Game.css';\nimport Board from './Board';\nimport Square from './Square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = calculateWinner(Board);\n  const handleClick = index => {\n    const boardCopy = [...board];\n    if (winner || boardCopy[index]) return null;\n    boardCopy[index] = xIsNext ? 'X' : 'O';\n    setBoard(boardCopy);\n    setXIsNext(!xIsNext);\n  };\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  const startNewGame = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start_btn\",\n      onClick: () => setBoard(Array(9).fill(null)),\n      children: \" \\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u0435 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [\"(startNewGame())\", /*#__PURE__*/_jsxDEV(Board, {\n      squares: board,\n      click: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"IjROtnHPczTjlg3KJS0tMbqKgQ4=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Board","Square","Game","board","setBoard","Array","fill","xIsNext","setXIsNext","winner","calculateWinner","handleClick","index","boardCopy","squares","lines","i","length","a","b","c","startNewGame"],"sources":["C:/Users/DOM/Desktop/my-app 123/src/components/Game.jsx"],"sourcesContent":["import React, { useState} from 'react';\r\nimport './Game.css'\r\nimport Board from './Board';\r\nimport Square from './Square';\r\n\r\nconst Game = () => {\r\n    const [board, setBoard] = useState(Array(9).fill (null))\r\n    const [xIsNext, setXIsNext] =useState(true)\r\n    const winner = calculateWinner(Board)\r\n\r\n    const handleClick = (index) => {\r\n        const boardCopy = [...board]\r\n        if (winner || boardCopy [index]) return null;\r\n        boardCopy[index] = xIsNext ? 'X' : 'O'\r\n        setBoard(boardCopy)\r\n        setXIsNext(!xIsNext)\r\n   \r\n    }\r\n\r\n    function calculateWinner(squares) {\r\n        const lines = [\r\n          [0, 1, 2],\r\n          [3, 4, 5],\r\n          [6, 7, 8],\r\n          [0, 3, 6],\r\n          [1, 4, 7],\r\n          [2, 5, 8],\r\n          [0, 4, 8],\r\n          [2, 4, 6],\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n          const [a, b, c] = lines[i];\r\n          if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n\r\n      const startNewGame = () => {\r\n        return (\r\n        <button className='start_btn' onClick={() => setBoard(Array(9).fill(null))}> Очистить поле </button>\r\n          \r\n        )   \r\n        \r\n      }\r\n\r\n\r\n    return (\r\n        <div className='wrapper'>\r\n        (startNewGame())\r\n           <Board squares={board} click={handleClick} /> \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n  \r\n\r\nexport default Game;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,OAAO,YAAY;AACnB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAAC;AAE9B,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAACM,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAE,IAAI,CAAC,CAAC;EACxD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAET,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAMU,MAAM,GAAGC,eAAe,CAACV,KAAK,CAAC;EAErC,MAAMW,WAAW,GAAIC,KAAK,IAAK;IAC3B,MAAMC,SAAS,GAAG,CAAC,GAAGV,KAAK,CAAC;IAC5B,IAAIM,MAAM,IAAII,SAAS,CAAED,KAAK,CAAC,EAAE,OAAO,IAAI;IAC5CC,SAAS,CAACD,KAAK,CAAC,GAAGL,OAAO,GAAG,GAAG,GAAG,GAAG;IACtCH,QAAQ,CAACS,SAAS,CAAC;IACnBL,UAAU,CAAC,CAACD,OAAO,CAAC;EAExB,CAAC;EAED,SAASG,eAAe,CAACI,OAAO,EAAE;IAC9B,MAAMC,KAAK,GAAG,CACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACV;IACD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,MAAM,CAACE,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGL,KAAK,CAACC,CAAC,CAAC;MAC1B,IAAIF,OAAO,CAACI,CAAC,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAAC,KAAKJ,OAAO,CAACK,CAAC,CAAC,IAAIL,OAAO,CAACI,CAAC,CAAC,KAAKJ,OAAO,CAACM,CAAC,CAAC,EAAE;QACxE,OAAON,OAAO,CAACI,CAAC,CAAC;MACnB;IACF;IACA,OAAO,IAAI;EACb;EAEA,MAAMG,YAAY,GAAG,MAAM;IACzB,oBACA;MAAQ,SAAS,EAAC,WAAW;MAAC,OAAO,EAAE,MAAMjB,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB;EAItG,CAAC;EAGH,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,4CAErB,QAAC,KAAK;MAAC,OAAO,EAAEH,KAAM;MAAC,KAAK,EAAEQ;IAAY;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1C;AAEd,CAAC;AAAA,GAjDKT,IAAI;AAAA,KAAJA,IAAI;AAsDV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}